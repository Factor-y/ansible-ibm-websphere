# Install Installation Manager
#
# Variables used in this playbook that can be setup at hosts file.
#
# HTTP server that has installation Files
#   iim_repository_url:     http://192.168.1.1/installation
#
# For 1.8.6000
#   iim_bin_file=agent.installer.linux.gtk.x86_64_1.8.6000.20161118_1611.zip
#   iim_bin_file_sha256=b253a06bccace5934b108632487182f6a6f659082fea69372242b9865a64e4f3
#
---
- name:                     Install IBM Installation Manager
  hosts:                    dmgr,was-servers,ihs-servers
  become:                   true
  vars:
    __tmp_dir:              "{{ tmp_dir | default('/opt/IBM/Binaries') }}/iim"
    __logs_dir:             "{{ tmp_dir | default('/opt/IBM/Binaries') }}/logs"
    __iim_install_location: "{{ iim_install_location  | default('/opt/IBM/InstallationManager') }}"
    __bin_file:             "{{ iim_bin_file | default('agent.installer.linux.gtk.x86_64_1.8.7000.20170706_2137.zip') }}"
    __bin_file_sha256:      "{{ iim_bin_file_sha256 | default('0808503fae69956ffea5f8ca4d9f994111b35b0af1216fb5464f6483f8700c45') }}"
    __this_version:         "{{ iim_version | default('1.8.7000.20170706_2137') }}"
    __product_id:           "\"id='com.ibm.cic.agent' version='{{ __this_version }}'\""
  tasks:
    - name:                 Install pre-requisites
      yum:                  name={{item}} state=present
      with_items:
        - unzip
        - tar
        - wget
      when:                 (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")

    # <package kind='offering' name='IBMÂ® Installation Manager' id='com.ibm.cic.agent' version='1.8.7000.20170706_2137
    - name:                 Is Product already Installed?
      command:              egrep {{ __product_id }} /var/ibm/InstallationManager/installed.xml
      register:             version_already_installed
      ignore_errors:        true

    #-  debug:               var=version_already_installed
    - name:                 Create Binaries directory
      file:                 path={{ __tmp_dir }} state=directory mode=0755
      when:                 version_already_installed.rc != 0

    - name:                 Create Logs directory
      file:                 path={{ __logs_dir }} state=directory mode=0755
      when:                 version_already_installed.rc != 0

    - name:                 Download IBM Installation Manager
      get_url:
        url:                "{{ iim_repository_url }}/{{ __bin_file }}"
        dest:               "{{ __tmp_dir }}/{{ __bin_file }}"
        mode:               0755
        checksum:           sha256:{{ __bin_file_sha256 }}
      when:                 version_already_installed.rc != 0

    - name:                 Extract IBM Installation Manager
      unarchive:
        src:                "{{ __tmp_dir }}/{{ __bin_file }}"
        dest:               "{{ __tmp_dir }}/"
        copy:               no
      when:                 version_already_installed.rc != 0

    - name:                 Install/Update IBM Installation Manager
      command:
        chdir={{ __tmp_dir }}
        {{ __tmp_dir }}/tools/imcl install com.ibm.cic.agent -acceptLicense -installationDirectory {{ __iim_install_location }} -repositories {{ __tmp_dir }} -log {{ __logs_dir }}/iim_install.{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}.log
      register:             cout
      changed_when:         (cout.stdout.find('Installed com.ibm.cic.agent') != -1) or (cout.stdout.find('Updated to com.ibm.cic.agent') != -1)
      when:                 version_already_installed.rc != 0

    #- debug:                msg={{ cout }}

    - name:                 Cleanup Binaries directory
      file:                 path={{ __tmp_dir }} state=absent
      when:                 version_already_installed.rc != 0
